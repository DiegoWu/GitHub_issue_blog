{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Desktop/github_issue_blog/frontend/src/components/ListPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const endOfPageRef = useRef(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/posts?page=${page}`);\n        setPosts(prevPosts => [...prevPosts, ...response.data]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [page]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && !loading) {\n        setPage(prevPage => prevPage + 1);\n      }\n    }, {\n      threshold: 1\n    });\n    if (endOfPageRef.current) {\n      observer.observe(endOfPageRef.current);\n    }\n    return () => {\n      if (endOfPageRef.current) {\n        observer.unobserve(endOfPageRef.current);\n      }\n    };\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"duv\", {\n    children: \"hellow\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n  // <div>\n  //   <h1>List of Posts</h1>\n  //   <ul>\n  //     {posts.map(post => (\n  //       <li key={post.id}>{post.title}</li>\n  //     ))}\n  //   </ul>\n  //   {loading && <p>Loading...</p>}\n  //   <div ref={endOfPageRef}></div>\n  // </div>\n  ;\n};\n_s(ListPage, \"YoHszOQEcySef37t84T7W7idhlM=\");\n_c = ListPage;\nexport default ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ListPage","_s","posts","setPosts","page","setPage","loading","setLoading","endOfPageRef","fetchPosts","response","get","prevPosts","data","error","console","observer","IntersectionObserver","entries","isIntersecting","prevPage","threshold","current","observe","unobserve","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/diego/Desktop/github_issue_blog/frontend/src/components/ListPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst ListPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const endOfPageRef = useRef(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`/api/posts?page=${page}`);\n        setPosts(prevPosts => [...prevPosts, ...response.data]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, [page]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      entries => {\n        if (entries[0].isIntersecting && !loading) {\n          setPage(prevPage => prevPage + 1);\n        }\n      },\n      { threshold: 1 }\n    );\n\n    if (endOfPageRef.current) {\n      observer.observe(endOfPageRef.current);\n    }\n\n    return () => {\n      if (endOfPageRef.current) {\n        observer.unobserve(endOfPageRef.current);\n      }\n    };\n  }, [loading]);\n\n  return (\n    <duv>\n      hellow\n    </duv>\n    // <div>\n    //   <h1>List of Posts</h1>\n    //   <ul>\n    //     {posts.map(post => (\n    //       <li key={post.id}>{post.title}</li>\n    //     ))}\n    //   </ul>\n    //   {loading && <p>Loading...</p>}\n    //   <div ref={endOfPageRef}></div>\n    // </div>\n  );\n};\n\nexport default ListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMc,YAAY,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFF,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,mBAAkBP,IAAK,EAAC,CAAC;QAC3DD,QAAQ,CAACS,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACvDN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEVT,SAAS,CAAC,MAAM;IACd,MAAMqB,QAAQ,GAAG,IAAIC,oBAAoB,CACvCC,OAAO,IAAI;MACT,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAI,CAACb,OAAO,EAAE;QACzCD,OAAO,CAACe,QAAQ,IAAIA,QAAQ,GAAG,CAAC,CAAC;MACnC;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAE,CACjB,CAAC;IAED,IAAIb,YAAY,CAACc,OAAO,EAAE;MACxBN,QAAQ,CAACO,OAAO,CAACf,YAAY,CAACc,OAAO,CAAC;IACxC;IAEA,OAAO,MAAM;MACX,IAAId,YAAY,CAACc,OAAO,EAAE;QACxBN,QAAQ,CAACQ,SAAS,CAAChB,YAAY,CAACc,OAAO,CAAC;MAC1C;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,OAAO,CAAC,CAAC;EAEb,oBACEP,OAAA;IAAA0B,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAC5B,EAAA,CA1DID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}